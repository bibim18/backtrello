'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function (yupConfig) {
    var _this3 = this;

    return function (target, key, descriptor) {
        var query = yupConfig.query,
            body = yupConfig.body,
            params = yupConfig.params;

        var validate = function () {
            var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(ctx, next) {
                var validateQuery, validateBody, validateParams;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                if (!query) {
                                    _context.next = 6;
                                    break;
                                }

                                _context.next = 3;
                                return query.isValid(ctx.query);

                            case 3:
                                _context.t0 = _context.sent;
                                _context.next = 7;
                                break;

                            case 6:
                                _context.t0 = true;

                            case 7:
                                validateQuery = _context.t0;

                                if (!body) {
                                    _context.next = 14;
                                    break;
                                }

                                _context.next = 11;
                                return body.isValid(ctx.request.body);

                            case 11:
                                _context.t1 = _context.sent;
                                _context.next = 15;
                                break;

                            case 14:
                                _context.t1 = true;

                            case 15:
                                validateBody = _context.t1;

                                if (!params) {
                                    _context.next = 22;
                                    break;
                                }

                                _context.next = 19;
                                return params.isValid(ctx.params);

                            case 19:
                                _context.t2 = _context.sent;
                                _context.next = 23;
                                break;

                            case 22:
                                _context.t2 = true;

                            case 23:
                                validateParams = _context.t2;

                                if (!(validateQuery && validateBody && validateParams)) {
                                    _context.next = 27;
                                    break;
                                }

                                _context.next = 28;
                                break;

                            case 27:
                                throw new ValidationError('User Input Validate Error', {
                                    validateQuery: validateQuery,
                                    validateBody: validateBody,
                                    validateParams: validateParams
                                });

                            case 28:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, _this3);
            }));

            return function validate(_x3, _x4) {
                return _ref.apply(this, arguments);
            };
        }();
        var oldDescriptor = descriptor.value;
        descriptor.value = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
            var _args2 = arguments;
            return regeneratorRuntime.wrap(function _callee2$(_context2) {
                while (1) {
                    switch (_context2.prev = _context2.next) {
                        case 0:
                            _context2.next = 2;
                            return validate(_args2.length <= 0 ? undefined : _args2[0]);

                        case 2:
                            _context2.next = 4;
                            return oldDescriptor.apply(undefined, _args2);

                        case 4:
                        case 'end':
                            return _context2.stop();
                    }
                }
            }, _callee2, this);
        }));
        return descriptor;
    };
};

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var errorCode = {
    VALIDATION: {
        CODE: 'VALIDATION',
        STATUS: 400
    }
};

var BaseError = function (_Error) {
    _inherits(BaseError, _Error);

    function BaseError(message) {
        _classCallCheck(this, BaseError);

        var _this = _possibleConstructorReturn(this, (BaseError.__proto__ || Object.getPrototypeOf(BaseError)).call(this, message));

        _this.name = _this.constructor.name;
        _this.message = message;
        return _this;
    }

    return BaseError;
}(Error);

var ValidationError = function (_BaseError) {
    _inherits(ValidationError, _BaseError);

    function ValidationError(message, errors, data) {
        var code = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : errorCode.VALIDATION.CODE;
        var status = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : errorCode.VALIDATION.STATUS;

        _classCallCheck(this, ValidationError);

        var _this2 = _possibleConstructorReturn(this, (ValidationError.__proto__ || Object.getPrototypeOf(ValidationError)).call(this, message));

        _this2.name = 'ValidationError';
        _this2.status = 400;
        _this2.code = code;
        _this2.data = data;
        _this2.errors = errors;
        return _this2;
    }

    return ValidationError;
}(BaseError);
//# sourceMappingURL=index.js.map